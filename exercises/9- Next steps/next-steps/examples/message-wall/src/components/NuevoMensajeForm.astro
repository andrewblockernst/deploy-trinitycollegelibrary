<new-message-form>
  <form
    action="/api/mensajes"
    method="post"
    class="flex w-full justify-between gap-2"
  >
    <input
      class="border border-gray-300 rounded-md p-2 flex-1"
      type="text"
      name="content"
      placeholder="Contenido del mensaje"
    />
    <button
      class="bg-blue-500 hover:bg-blue-600 text-white rounded-md p-2 cursor-pointer"
      type="submit"
    >
      Guardar
    </button>
  </form>
</new-message-form>

<script>
  import type { Mensaje } from "../types";
  import type { MessageList } from "./MensajeList.astro.0.mts";

  class NewMessageForm extends HTMLElement {
    private form: HTMLFormElement | null = null;
    private input: HTMLInputElement | null = null;
    private messageList: MessageList | null = null;

    connectedCallback() {
      this.form = this.querySelector("form");
      this.input = this.querySelector("input");
      this.messageList = document.querySelector("message-list");
      this.form?.addEventListener("submit", this.handleCreateNewMessage);
    }

    handleCreateNewMessage = async (e: SubmitEvent) => {
      e.preventDefault();
      const content = this.input?.value;
      if (!content) return;

      this.input!.value = "";

      const response = await fetch("/api/mensajes", {
        method: "POST",
        body: JSON.stringify({ content }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      const data: { message: Mensaje } = await response.json();
      this.messageList?.addMessage(data.message);
    };
  }

  customElements.define("new-message-form", NewMessageForm);
</script>
